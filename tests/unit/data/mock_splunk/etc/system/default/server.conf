#   Version 6.3.0
# DO NOT EDIT THIS FILE!
# Changes to default files will be lost on update and are difficult to
# manage and support.
#
# Please make any changes to system defaults by overriding them in
# apps or $SPLUNK_HOME/etc/system/local
# (See "Configuration file precedence" in the web documentation).
#
# To override a specific setting, copy the name of the stanza and
# setting to the file where you wish to override it.
#
# This file contains possible attributes and values to configure SSL
# and HTTP server options.
#


[general]
serverName=unittestServer
sessionTimeout=1h
pass4SymmKey = changeme

# The following 'allowRemoteLogin' setting controls remote management of your splunk instance.
#  - If set to 'always', all remote logins are allowed.
#  - If set to 'never', only local logins to splunkd will be allowed. Note that this will still allow
#    remote management through splunkweb if splunkweb is on the same server.
#  - If set to 'requireSetPassword' (default behavior):
#     1. In the free license, remote login is disabled.
#     2. In the pro license, remote login is only disabled for the admin user that has not changed their default password
allowRemoteLogin=requireSetPassword

access_logging_for_phonehome=true
hangup_after_phonehome=false

listenOnIPv6 = no
connectUsingIpVersion = auto

useHTTPServerCompression = true
useHTTPClientCompression = false

defaultHTTPServerCompressionLevel = 6
skipHTTPCompressionAcl = 127.0.0.1 ::1

parallelIngestionPipelines = 1

instanceType = download

[sslConfig]
enableSplunkdSSL = true
useClientSSLCompression = true
useSplunkdClientSSLCompression = true
# enableSplunkSearchSSL has been moved to web.conf,  and changed to enableSplunkWebSSL

#Allow only sslv3 and above connections to the HTTP server
sslVersions = *,-ssl2
sendStrictTransportSecurityHeader = false
allowSslCompression = true
allowSslRenegotiation = true

# For the HTTP server, Diable ciphers lower than 128-bit and disallow ciphers that
# don't provide authentication and/or encryption.
# Use 'openssl ciphers -v' to generate a list of supported ciphers
# Allow only TLSv1 cipher with 'high' encryption suits, i.e. whose key lengths are
# larger than or equal to 128 bits
cipherSuite = TLSv1+HIGH:@STRENGTH

sslKeysfile = server.pem
sslKeysfilePassword = password
caCertFile = cacert.pem
caPath = $SPLUNK_HOME/etc/auth
certCreateScript = $SPLUNK_HOME/bin/splunk, createssl, server-cert

[httpServer]

# defines the stylesheet relative URL to apply to default Atom feeds;
# set to 'none' to not write out xsl-stylesheet directive
atomFeedStylesheet = /static/atom.xsl

max-age = 3600
follow-symlinks = false
# reject web accesses over 800MB in length
max_content_length = 838860800

# When HTTP client streams data to HTTP server, server will timeout write operation after
# streamInWriteTimeout seconds if it cannot make write progress.
streamInWriteTimeout = 5

acceptFrom = *

# Automatically tune these limits:
maxThreads = 0
maxSockets = 0

forceHttp10 = auto
crossOriginSharingPolicy =
x_frame_options_sameorigin = true
allowBasicAuth = true
basicAuthRealm = /splunk
allowCookieAuth = true
cookieAuthHttpOnly = true
cookieAuthSecure = true
allowEmbedTokenAuth = true
dedicatedIoThreads = 0

[mimetype-extension-map]
gif = image/gif
html = text/html
htm = text/html
jpg = image/jpg
png = image/png
txt = text/plain
xml = text/xml
xsl = text/xml

[applicationsManagement]
allowInternetAccess = true
url = https://apps.splunk.com/api/apps
loginUrl = https://apps.splunk.com/api/account:login/
detailsUrl = https://apps.splunk.com/apps/id
updateHost = https://apps.splunk.com
updatePath = /api/apps:resolve/checkforupgrade
updateTimeout = 24h
caCertFile = $SPLUNK_HOME/etc/auth/appsCA.pem
sslCommonNameList = apps.splunk.com
cipherSuite = TLSv1+HIGH:@STRENGTH

# disk usage processor settings
[diskUsage]
minFreeSpace = 5000
pollingFrequency = 100000
pollingTimerFrequency = 10

[fileInput]
outputQueue = parsingQueue

[diag]
# don't capture local auth information in troubleshooting files
EXCLUDE-auth = */etc/auth/*
# don't capture the index files for lookups either (big! unlikely to help)
EXCLUDE-lookup-indexes = */etc/*/lookups/*.tsidx

#
# default license configuration
# by default, this node is a master that has a single
# slave (itself) and a single pool based on the single
# free stack that alots 100% to itself
#

[license]
master_uri = self
# these timeouts only matter if you have a master_uri set to remote master
connection_timeout = 30
send_timeout = 30
receive_timeout = 30
squash_threshold = 2000
report_interval = 1m
strict_pool_quota = true


#
# Search head pooling configuration
#
[pooling]
state                     = disabled
storage                   =
app_update_triggers       = true
# Wait 10 seconds before giving up on acquiring file-based lock.
lock.timeout              = 10s
# Do not log to locked file.
lock.logging              = false
# Rebuild in-memory conf data structures at most once every minute.
poll.interval.rebuild     = 1m
# Check files for changes at most once every minute.
poll.interval.check       = 1m
# Ignore files that we do not typically modify at runtime. The exception is
# app.conf, which we use to detect app installation and upgrade.
poll.blacklist.cdefault   = (apps/*|users/*/*)/default(.old.*)?/(?!app.conf$)
poll.blacklist.mdefault   = (apps/*|users/*/*)/metadata/default.meta$
# Ignore users.ini, which has its own separate update checking.
poll.blacklist.users_ini  = users/users.ini$
# Ignore files that splunkd's HTTP server handles directly.
poll.blacklist.static     = (apps/*|users/*/*)/static$
# Ignore files that splunkweb handles directly.
poll.blacklist.appserver  = (apps/*|users/*/*)/appserver$
poll.blacklist.django     = (apps/*|users/*/*)/django$
poll.blacklist.appfx      = apps/framework$
poll.blacklist.locale     = (apps/*|users/*/*)/locale$
# Ignore our own lock and tmp files, as well as vim and emacs tmp files.
poll.blacklist.tmpfiles   = .(lock|tmp|swp|~)$

[queue]
maxSize = 500KB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling interval is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=fschangemanager_queue]
maxSize = 5MB
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=AQ]
maxSize = 10MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=WEVT]
maxSize = 5MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=aggQueue]
maxSize = 1MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=parsingQueue]
maxSize = 6MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=vixQueue]
maxSize = 8MB

[clustering]
mode = disabled
pass4SymmKey =
register_replication_address =
register_forwarder_address =
register_search_address =
executor_workers = 10

# lowlevel timeouts for intra-cluster communication
cxn_timeout = 60
send_timeout = 60
rcv_timeout = 60

# replication channel timeouts
rep_cxn_timeout = 60
rep_send_timeout = 60
rep_rcv_timeout = 60
rep_max_send_timeout = 600
rep_max_rcv_timeout = 600

# only valid for mode=master
service_interval = 1
replication_factor = 3
search_factor = 2
heartbeat_timeout = 60
restart_timeout = 60
quiet_period = 60
max_peer_build_load = 2
max_peer_rep_load = 5
searchable_targets = true
searchable_target_sync_timeout = 60
target_wait_time = 150
commit_retry_time = 300
percent_peers_to_restart = 10
multisite = false
site_replication_factor = origin:2, total:3
site_search_factor = origin:1, total:2
available_sites =
access_logging_for_heartbeats=false
auto_rebalance_primaries = true
idle_connections_pool_size = -1
use_batch_mask_changes = true
service_jobs_msec = 100

#only valid for mode=master or mode=searchhead
generation_poll_interval = 5

# only needed for mode=slave or mode=searchhead
master_uri =

# only needed for mode=slave
heartbeat_period = 1
enableS2SHeartbeat = true
s2sHeartbeatTimeout = 600
throwOnBucketBuildReadError = false
max_replication_errors = 3
search_files_retry_timeout = 600

[introspection:generator:disk_objects]
disabled = true

[introspection:generator:disk_objects__fishbucket]
disabled = false

[introspection:generator:disk_objects__bundle_replication]
disabled = false

[introspection:generator:resource_usage]
disabled = true

[introspection:generator:kvstore]
disabled = true

[shclustering]
disabled = true
register_replication_address =
executor_workers = 10
adhoc_searchhead = false
no_artifact_replications = false
captain_is_adhoc_searchhead = false
async_replicate_on_proxy = true

master_dump_service_periods = 500
scheduling_heuristic = scheduler_load_based
long_running_jobs_poll_period = 600

election_timeout_ms = 60000
election_timeout_2_hb_ratio = 12

# lowlevel timeouts for intra-cluster communication
cxn_timeout = 60
send_timeout = 60
rcv_timeout = 60

# lowlevel timeouts for intra-cluster communication for the raft protocol
cxn_timeout_raft = 2
send_timeout_raft = 5
rcv_timeout_raft = 5

log_heartbeat_append_entries = false

# replication channel timeouts
rep_cxn_timeout = 60
rep_send_timeout = 60
rep_rcv_timeout = 60
rep_max_send_timeout = 600
rep_max_rcv_timeout = 600

# only valid for mode=master
replication_factor = 3
heartbeat_timeout = 60
restart_timeout = 600
quiet_period = 60
max_peer_rep_load = 5
target_wait_time = 150
percent_peers_to_restart = 10
rolling_restart_with_captaincy_exchange = true
access_logging_for_heartbeats=false

# only needed for mode=slave
heartbeat_period = 5
enableS2SHeartbeat = true
s2sHeartbeatTimeout = 600

#proxying related
sid_proxying = true
ss_proxying = true
ra_proxying = true
alert_proxying = true

csv_journal_rows_per_hb = 10000

#
# Replicate changes to UI- and search-related configurations.
#

conf_replication_period = 5
conf_replication_max_pull_count = 1000
conf_replication_max_push_count = 100

conf_replication_include.alert_actions     = true
conf_replication_include.collections       = true
conf_replication_include.commands          = true
conf_replication_include.datamodels        = true
conf_replication_include.event_renderers   = true
conf_replication_include.eventtypes        = true
conf_replication_include.fields            = true
conf_replication_include.history           = false
conf_replication_include.html              = true
conf_replication_include.literals          = true
conf_replication_include.lookups           = true
conf_replication_include.macros            = true
conf_replication_include.manager           = true
conf_replication_include.models            = true
conf_replication_include.multikv           = true
conf_replication_include.nav               = true
conf_replication_include.panels            = true
conf_replication_include.passwords         = true
conf_replication_include.props             = true
conf_replication_include.quickstart        = true
conf_replication_include.savedsearches     = true
conf_replication_include.searchbnf         = true
conf_replication_include.searchscripts     = true
conf_replication_include.segmenters        = true
conf_replication_include.tags              = true
conf_replication_include.tos               = true
conf_replication_include.times             = true
conf_replication_include.transforms        = true
conf_replication_include.transactiontypes  = true
conf_replication_include.ui-prefs          = true
conf_replication_include.ui-tour           = true
conf_replication_include.user-prefs        = true
conf_replication_include.views             = true
conf_replication_include.viewstates        = true
conf_replication_include.workflow_actions  = true

# Whitelists and blacklists for configuration replication summaries.
conf_replication_summary.whitelist.refine.local = (system|(apps/*)|users(/_reserved)?/*/*)/(local/...|metadata/local.meta)
conf_replication_summary.whitelist.lookups      = (system|(apps/*)|users(/_reserved)?/*/*)/lookups/*
conf_replication_summary.whitelist.repo         = system/replication/*.json
conf_replication_summary.blacklist.lookup_index = (system|(apps/*)|users(/_reserved)?/*/*)/lookups/*.(tmp$|index($|/...))

conf_replication_summary.concerning_file_size = 50
conf_replication_summary.period = 1m

conf_replication_purge.eligibile_count = 20000
conf_replication_purge.eligibile_age = 1d
conf_replication_purge.period = 1h

#
# Deploy configurations to search head cluster members.
#

conf_deploy_repository = $SPLUNK_HOME/etc/shcluster
conf_deploy_staging = $SPLUNK_HOME/var/run/splunk/deploy
conf_deploy_concerning_file_size = 50

conf_deploy_fetch_url =
conf_deploy_fetch_mode = replace

artifact_status_fields = user, eai:acl.app , label

encrypt_fields = "server:sslConfig:sslKeysfilePassword", "server:shclustering:pass4SymmKey", "outputs:tcpout:sslPassword", "inputs:SSL:password", "alert_actions:email:auth_password", "server:shclustering:password", "server:clustering:password", "server:clustering:pass4SymmKey", "server:general:pass4SymmKey", "app:credential:password", "passwords:credential:password", "server:deployment:pass4SymmKey", "authentication: :bindDNpassword", "server:kvstore:sslKeysPassword"

enable_jobs_data_lite = false

[kvstore]

disabled = false

port = 8191
replicaset = splunkrs
shutdownTimeout = 100
initAttempts = 300

dbPath = $SPLUNK_DB/kvstore
