version: 2.1

orbs:
  python: circleci/python@0.2.1

executors:
  linux:
    machine:
      image: ubuntu-1604:201903-01
  macos:
    macos:
      xcode: 11.4
jobs:
  test-unit:
    parameters:
      os:
        type: executor
      python-version:
        type: string
    executor: << parameters.os >>
    steps:
      - checkout
      - python/load-cache
      - run:
          name: install deps
          command: |
            pip install --upgrade pip
            pip install --upgrade virtualenv
            unset PYENV_ROOT
            curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
            export PATH="$HOME/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            pyenv install << parameters.python-version >>
            pyenv global << parameters.python-version >>
            virtualenv .venv
            pip install --upgrade virtualenv
            source .venv/bin/activate
            pip install -r requirements.txt
            pip install -e .
            mkdir test-results || true
      - python/save-cache
      - run:
          command: |
            source .venv/bin/activate
            python -m pytest --junitxml=test-results/results.xml --cov=solnlib --cov-report=html tests
          name: Test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: htmlcov

  test-splunk:
    parameters:
      os:
        type: executor
      splunk-version:
        type: string
      python-version:
        type: string
    executor: << parameters.os >>
    steps:
      - checkout
      - python/load-cache
      - run:
          name: install deps
          command: |
            pip install --upgrade pip
            pip install --upgrade virtualenv
            unset PYENV_ROOT
            curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
            export PATH="$HOME/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            pyenv install << parameters.python-version >>
            pyenv global << parameters.python-version >>
            virtualenv .venv
            pip install --upgrade virtualenv
            source .venv/bin/activate
            pip install -r requirements.txt
            pip install -e .
            mkdir test-results || true
      - python/save-cache
      - run:
          name: setup Splunk
          command: |
            SPLUNK_VERSION = 8.0.5
            SPLUNK_BUILD = a1a6394cc5ae
            SPLUNK_SLUG = $SPLUNK_VERSION-SPLUNK_BUILD
            SPLUNK_ARCH = x86_64
            SPLUNK_LINUX_FILENAME = splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-${SPLUNK_ARCH}.tgz
            SPLUNK_LINUX_BUILD_URL = https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_LINUX_FILENAME}
            wget -qO /tmp/splunk.tgz ${SPLUNK_BUILD_URL}
            tar -C /opt/splunk --strip 1 -zxf /tmp/splunk.tgz
            ls /opt/splunk/bin
      - run:
          command: |
            source .venv/bin/activate
            python -m pytest --junitxml=test-results/results.xml --cov=solnlib --cov-report=html examples
          name: Test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: htmlcov

workflows:
  main:
    jobs:
      - test-unit:
          matrix:
            parameters:
              os: [linux]
              python-version: ["2.7.17", "3.7.4"]
      - test-splunk:
          matrix:
            parameters:
              os: [linux]
              splunk-version: ["8.0.5"]
              python-version: ["2.7.17", "3.7.4"]
