name: CI

on:
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main, develop]

jobs:
  compliance:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-compliance.yaml@feature/open-source

  code-checks:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-code-checks.yaml@feature/open-source
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Tools
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - name: Build
        run: |
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry install
          poetry build

  unit-tests:
    name: test-unit
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: run tests
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry install
          poetry run pytest --junitxml=test-results/results.xml --cov=solnlib --cov-report=xml:unit_tests_coverage.xml tests/unit
      - uses: actions/upload-artifact@v2
        with:
          name: unit tests test-results
          path: test-results
      - uses: actions/upload-artifact@v2
        with:
          name: unit_tests_coverage
          path: unit_tests_coverage.xml

  test-splunk:
    name: test-splunk
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        splunk-version: ["8.0", "8.1", "8.2"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Splunk
        run: |
          pip install --user git+https://github.com/pixelb/crudini
          export SPLUNK_PRODUCT=splunk
          SPLUNK_VERSION=$(crudini --get deps/build/addonfactory_test_matrix_splunk/splunk_matrix.conf ${{ matrix.splunk-version }} VERSION)
          export SPLUNK_VERSION
          SPLUNK_BUILD=$(crudini --get deps/build/addonfactory_test_matrix_splunk/splunk_matrix.conf ${{ matrix.splunk-version }} BUILD)
          export SPLUNK_BUILD
          export SPLUNK_SLUG=$SPLUNK_VERSION-SPLUNK_BUILD
          export SPLUNK_ARCH=x86_64
          export SPLUNK_LINUX_FILENAME=splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-${SPLUNK_ARCH}.tgz
          export SPLUNK_BUILD_URL=https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_LINUX_FILENAME}
          echo "$SPLUNK_BUILD_URL"
          export SPLUNK_HOME=/opt/splunk
          wget -qO /tmp/splunk.tgz "${SPLUNK_BUILD_URL}"
          sudo tar -C /opt -zxf /tmp/splunk.tgz
          sudo cp -r tests/integration/data/solnlib_demo $SPLUNK_HOME/etc/apps
          sudo cp -r solnlib $SPLUNK_HOME/etc/apps/solnlib_demo/bin/
          sudo mkdir -p $SPLUNK_HOME/etc/apps/Splunk_TA_test/default/
          sudo chown -R "$USER":"$USER" /opt/splunk
          ls $SPLUNK_HOME/etc/apps/solnlib_demo/bin/
          echo -e "[user_info]\nUSERNAME=Admin\nPASSWORD=Chang3d"'!' | sudo tee -a /opt/splunk/etc/system/local/user-seed.conf
          echo 'OPTIMISTIC_ABOUT_FILE_LOCKING=1' | sudo tee -a /opt/splunk/etc/splunk-launch.conf
          sudo /opt/splunk/bin/splunk start --accept-license
          sudo /opt/splunk/bin/splunk set servername custom-servername -auth admin:Chang3d!
          sudo /opt/splunk/bin/splunk restart
      - name: Run tests
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry install
          SPLUNK_HOME=/opt/splunk/ poetry run pytest --cov=solnlib --junitxml=test-results/results.xml --cov-report=xml:integration_tests_coverage_${{ matrix.splunk-version }}.xml -v tests/integration
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: test-splunk test-results
          path: test-results
      - uses: actions/upload-artifact@v2
        with:
          name: integration_tests_coverage
          path: integration_tests_coverage_*.xml

  upload-coverage:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - test-splunk
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/download-artifact@v2
        with:
          name: integration_tests_coverage
      - uses: actions/download-artifact@v2
        with:
          name: unit_tests_coverage
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./unit_tests_coverage.xml,./integration_tests_coverage_8.0.xml,./integration_tests_coverage_8.1.xml,./integration_tests_coverage_8.2.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          verbose: true

  publish:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-publish.yaml@feature/open-source
    needs:
      - compliance
      - code-checks
      - unit-tests
      - test-splunk
    secrets:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN_ADMIN }}
      PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
